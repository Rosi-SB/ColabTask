{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rosic\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\UNIVESP\\\\gerenciadorTarefas\\\\gerenciador-tarefas\\\\src\\\\Pages\\\\Dashboard\\\\dashboardTarefas.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport FormularioTarefa from \"../../Componentes/Tarefas/formularioTarefa\";\nimport ListaTarefas from \"../../Componentes/Tarefas/listaTarefas\";\nimport \"./dashboard.css\";\nimport { Titulo, Botao } from \"../../Componentes/ComponentesIcones\";\nimport { supabase } from \"../../supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DashboardTarefas() {\n  _s();\n  const [tarefas, setTarefas] = useState([]);\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\n  const [tarefaEditando, setTarefaEditando] = useState(null);\n  const [usuarioId, setUsuarioId] = useState(null);\n  useEffect(() => {\n    const obterUsuario = async () => {\n      const {\n        data\n      } = await supabase.auth.getUser();\n      if (data !== null && data !== void 0 && data.user) {\n        setUsuarioId(data.user.id);\n        carregarTarefas(data.user.id);\n      }\n    };\n    obterUsuario();\n  }, []);\n  const carregarTarefas = async iduser => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"tarefas\").select(\"*\").eq(\"iduser\", iduser).order(\"created_at\", {\n      ascending: false\n    });\n    if (!error) {\n      setTarefas(data);\n    }\n  };\n  const salvarTarefa = async tarefa => {\n    if (!usuarioId) return;\n    if (tarefaEditando) {\n      await supabase.from(\"tarefas\").update({\n        titulo: tarefa.titulo,\n        descricao: tarefa.descricao,\n        prioridade: tarefa.prioridade,\n        status: tarefa.status,\n        updated_at: new Date()\n      }).eq(\"idtarf\", tarefa.idtarf);\n    } else {\n      await supabase.from(\"tarefas\").insert([{\n        titulo: tarefa.titulo,\n        descricao: tarefa.descricao,\n        prioridade: tarefa.prioridade,\n        status: tarefa.status,\n        iduser: usuarioId\n      }]);\n    }\n    setTarefaEditando(null);\n    setMostrarFormulario(false);\n    carregarTarefas(usuarioId);\n  };\n  const excluirTarefa = async id => {\n    await supabase.from(\"tarefas\").delete().eq(\"idtarf\", id);\n    carregarTarefas(usuarioId);\n  };\n  const editarTarefa = tarefa => {\n    setTarefaEditando(tarefa);\n    setMostrarFormulario(true);\n  };\n  const alternarConclusao = async (id, statusAtual) => {\n    const novoStatus = statusAtual === \"concluída\" ? \"pendente\" : \"concluída\";\n    await supabase.from(\"tarefas\").update({\n      status: novoStatus\n    }).eq(\"idtarf\", id);\n    carregarTarefas(usuarioId);\n  };\n  const progresso = tarefas.length > 0 ? tarefas.filter(t => t.status === \"concluída\").length / tarefas.length * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-tarefas\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cabecalho\",\n      children: [/*#__PURE__*/_jsxDEV(Titulo, {\n        text: \"Minhas Tarefas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Botao, {\n        text: \"+ Nova Tarefa\",\n        onClick: () => {\n          setTarefaEditando(null);\n          setMostrarFormulario(!mostrarFormulario);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progresso\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Progresso do Projeto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: progresso,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), mostrarFormulario && /*#__PURE__*/_jsxDEV(FormularioTarefa, {\n      onSalvar: salvarTarefa,\n      tarefa: tarefaEditando\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListaTarefas, {\n      tarefas: tarefas,\n      onExcluir: excluirTarefa,\n      onToggleConclusao: id => {\n        const tarefa = tarefas.find(t => t.id === id);\n        if (tarefa) alternarConclusao(id, tarefa.concluida);\n      },\n      onEditar: editarTarefa\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardTarefas, \"a9Qb/eKXDT6xhELdDEemcJ/JSnk=\");\n_c = DashboardTarefas;\nvar _c;\n$RefreshReg$(_c, \"DashboardTarefas\");","map":{"version":3,"names":["useState","useEffect","FormularioTarefa","ListaTarefas","Titulo","Botao","supabase","jsxDEV","_jsxDEV","DashboardTarefas","_s","tarefas","setTarefas","mostrarFormulario","setMostrarFormulario","tarefaEditando","setTarefaEditando","usuarioId","setUsuarioId","obterUsuario","data","auth","getUser","user","id","carregarTarefas","iduser","error","from","select","eq","order","ascending","salvarTarefa","tarefa","update","titulo","descricao","prioridade","status","updated_at","Date","idtarf","insert","excluirTarefa","delete","editarTarefa","alternarConclusao","statusAtual","novoStatus","progresso","length","filter","t","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","max","onSalvar","onExcluir","onToggleConclusao","find","concluida","onEditar","_c","$RefreshReg$"],"sources":["C:/Users/rosic/OneDrive/Área de Trabalho/UNIVESP/gerenciadorTarefas/gerenciador-tarefas/src/Pages/Dashboard/dashboardTarefas.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport FormularioTarefa from \"../../Componentes/Tarefas/formularioTarefa\";\r\nimport ListaTarefas from \"../../Componentes/Tarefas/listaTarefas\";\r\nimport \"./dashboard.css\";\r\nimport { Titulo, Botao } from \"../../Componentes/ComponentesIcones\";\r\nimport { supabase } from \"../../supabaseClient\";\r\n\r\nexport default function DashboardTarefas() {\r\n  const [tarefas, setTarefas] = useState([]);\r\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\r\n  const [tarefaEditando, setTarefaEditando] = useState(null);\r\n  const [usuarioId, setUsuarioId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const obterUsuario = async () => {\r\n      const { data} = await supabase.auth.getUser();\r\n      if (data?.user) {\r\n        setUsuarioId(data.user.id);\r\n        carregarTarefas(data.user.id);\r\n      }\r\n    };\r\n    obterUsuario();\r\n  }, []);\r\n\r\n  const carregarTarefas = async (iduser) => {\r\n    const { data, error } = await supabase\r\n      .from(\"tarefas\")\r\n      .select(\"*\")\r\n      .eq(\"iduser\", iduser)\r\n      .order(\"created_at\", { ascending: false });\r\n\r\n    if (!error) {\r\n      setTarefas(data);\r\n    }\r\n  };\r\n\r\n  const salvarTarefa = async (tarefa) => {\r\n    if (!usuarioId) return;\r\n\r\n    if (tarefaEditando) {\r\n      await supabase\r\n        .from(\"tarefas\")\r\n        .update({\r\n          titulo: tarefa.titulo,\r\n          descricao: tarefa.descricao,\r\n          prioridade: tarefa.prioridade,\r\n          status: tarefa.status,\r\n          updated_at: new Date(),\r\n        })\r\n        .eq(\"idtarf\", tarefa.idtarf);\r\n    } else {\r\n      await supabase.from(\"tarefas\").insert([\r\n        {\r\n          titulo: tarefa.titulo,\r\n          descricao: tarefa.descricao,\r\n          prioridade: tarefa.prioridade,\r\n          status: tarefa.status,\r\n          iduser: usuarioId,\r\n        },\r\n      ]);\r\n    }\r\n\r\n    setTarefaEditando(null);\r\n    setMostrarFormulario(false);\r\n    carregarTarefas(usuarioId);\r\n  };\r\n\r\n  const excluirTarefa = async (id) => {\r\n    await supabase.from(\"tarefas\").delete().eq(\"idtarf\", id);\r\n    carregarTarefas(usuarioId);\r\n  };\r\n\r\n  const editarTarefa = (tarefa) => {\r\n    setTarefaEditando(tarefa);\r\n    setMostrarFormulario(true);\r\n  };\r\n\r\n  const alternarConclusao = async (id, statusAtual) => {\r\n    const novoStatus = statusAtual === \"concluída\" ? \"pendente\" : \"concluída\";\r\n    await supabase.from(\"tarefas\").update({ status: novoStatus }).eq(\"idtarf\", id);\r\n    carregarTarefas(usuarioId);\r\n  };\r\n\r\n  const progresso =\r\n    tarefas.length > 0\r\n      ? (tarefas.filter((t) => t.status === \"concluída\").length / tarefas.length) * 100\r\n      : 0;\r\n\r\n  return (\r\n    <div className=\"dashboard-tarefas\">\r\n      <div className=\"cabecalho\">\r\n        <Titulo text=\"Minhas Tarefas\" />\r\n        <Botao\r\n          text=\"+ Nova Tarefa\"\r\n          onClick={() => {\r\n            setTarefaEditando(null);\r\n            setMostrarFormulario(!mostrarFormulario);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"progresso\">\r\n        <label>Progresso do Projeto</label>\r\n        <progress value={progresso} max=\"100\" />\r\n      </div>\r\n\r\n      {mostrarFormulario && (\r\n        <FormularioTarefa\r\n          onSalvar={salvarTarefa}\r\n          tarefa={tarefaEditando}\r\n        />\r\n      )}\r\n\r\n      <ListaTarefas\r\n        tarefas={tarefas}\r\n        onExcluir={excluirTarefa}\r\n        onToggleConclusao={(id) => {\r\n          const tarefa = tarefas.find((t) => t.id === id);\r\n          if (tarefa) alternarConclusao(id, tarefa.concluida);\r\n        }}\r\n        onEditar={editarTarefa}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}