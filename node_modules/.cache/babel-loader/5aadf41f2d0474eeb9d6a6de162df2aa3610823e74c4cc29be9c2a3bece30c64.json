{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rosic\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\UNIVESP\\\\gerenciadorTarefas\\\\gerenciador-tarefas\\\\src\\\\Pages\\\\MeuCadastro\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { supabase } from \"../../supabaseClient\";\nimport { Titulo, Botao, BotaoClicado, CaixaTexto } from \"../../Componentes/ComponentesIcones\";\nimport Footer from \"../../Componentes/Footer\";\nimport \"./meuCadastro.css\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUserSlash } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MeuCadastro() {\n  _s();\n  const [nome, setNome] = useState(\"\");\n  const [email, setEmail] = useState(\"\"); // O email será apenas para leitura\n  const [senha, setSenha] = useState(\"\");\n  const [confirmarSenha, setConfirmarSenha] = useState(\"\");\n  const [erro, setErro] = useState(null);\n  const navigate = useNavigate();\n\n  // Usando useEffect para pegar as informações do usuário logado\n  useEffect(() => {\n    const fetchUser = async () => {\n      const {\n        data: {\n          user\n        }\n      } = await supabase.auth.getUser(); // Usando getUser() no lugar de user()\n\n      if (user) {\n        // Busca o nome do usuário na tabela 'usuarios' usando o iduser do supabase\n        const {\n          data,\n          error\n        } = await supabase.from(\"usuarios\").select(\"nome\").eq(\"iduser\", user.id) // Compara o id do usuário com o id da tabela\n        .single(); // Espera um único resultado\n\n        if (error) {\n          console.error(\"Erro ao buscar nome do usuário:\", error.message);\n          setErro(\"Erro ao carregar o nome do usuário.\");\n        } else {\n          setNome((data === null || data === void 0 ? void 0 : data.nome) || \"Nome não disponível\");\n          setEmail(user.email); // O email do Supabase é carregado aqui\n        }\n      } else {\n        setErro(\"Usuário não autenticado.\");\n        navigate(\"/dashboard\"); // Redireciona para o login se o usuário não estiver autenticado\n      }\n    };\n    fetchUser();\n  }, [navigate]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErro(null);\n\n    // Verificando se as senhas coincidem\n    if (senha !== confirmarSenha) {\n      setErro(\"As senhas não coincidem.\");\n      return;\n    }\n\n    // Obtém o usuário logado\n    const {\n      data: {\n        user\n      },\n      error\n    } = await supabase.auth.getUser();\n    if (error || !user) {\n      setErro(\"Usuário não está logado.\");\n      return;\n    }\n    try {\n      // Atualizando os dados do usuário na tabela 'usuarios', mas não atualizando o e-mail\n      const {\n        error: updateError\n      } = await supabase.from(\"usuarios\").update({\n        nome\n      }) // Atualiza o nome\n      .eq(\"iduser\", user.id); // Usando o ID do usuário para realizar a atualização\n\n      if (updateError) {\n        console.error(\"Erro ao atualizar no banco:\", updateError);\n        setErro(\"Erro ao atualizar informações no banco de dados.\");\n      } else {\n        // Atualizando a senha do usuário no Supabase\n        if (senha) {\n          const {\n            error: passwordError\n          } = await supabase.auth.updateUser({\n            password: senha // Atualiza a senha do usuário no Supabase\n          });\n          if (passwordError) {\n            setErro(\"Erro ao atualizar a senha.\");\n            return;\n          }\n        }\n\n        // Após atualizar as informações, redireciona para a tela inicial\n        navigate(\"/dashboard\");\n      }\n    } catch (err) {\n      console.error(\"Erro inesperado:\", err);\n      setErro(\"Erro inesperado.\");\n    }\n  };\n  const handleDeleteAccount = async () => {\n    const confirmDelete = window.confirm(\"Tem certeza que deseja excluir sua conta?\");\n    if (confirmDelete) {\n      const {\n        data: {\n          user\n        },\n        error\n      } = await supabase.auth.getUser();\n      if (error || !user) {\n        setErro(\"Erro ao buscar usuário.\");\n        return;\n      }\n      try {\n        const {\n          error: deleteError\n        } = await supabase.auth.api.deleteUser(user.id);\n        if (deleteError) {\n          setErro(\"Erro ao excluir a conta.\");\n        } else {\n          navigate(\"/\"); // Após excluir, redireciona para a tela de login\n        }\n      } catch (err) {\n        console.error(\"Erro ao excluir a conta:\", err);\n        setErro(\"Erro inesperado ao excluir a conta.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cadastro-container\",\n      children: [/*#__PURE__*/_jsxDEV(Titulo, {\n        text: \"Atualizar Conta\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"cadastro-form\",\n        children: [erro && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"erro\",\n          children: erro\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"nome\",\n            children: \"Nome completo:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CaixaTexto, {\n            id: \"nome\",\n            text: \"Digite seu nome\",\n            value: nome,\n            type: \"text\",\n            onChange: e => setNome(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"small\", {\n            children: \"O email n\\xE3o pode ser alterado\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CaixaTexto, {\n            id: \"email\",\n            text: \"Seu email\",\n            value: email,\n            type: \"email\",\n            readOnly: true,\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Trocar senha:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"senha\",\n            children: \"Nova Senha:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CaixaTexto, {\n            id: \"senha\",\n            type: \"password\",\n            value: senha,\n            text: \"Digite sua nova senha\",\n            onChange: e => setSenha(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"confirmarSenha\",\n            children: \"Confirmar Nova Senha:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(CaixaTexto, {\n            id: \"confirmarSenha\",\n            type: \"password\",\n            value: confirmarSenha,\n            text: \"Confirme sua nova senha\",\n            onChange: e => setConfirmarSenha(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"botoes-cadastro\",\n          children: [/*#__PURE__*/_jsxDEV(Botao, {\n            text: \"Atualizar\",\n            type: \"submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/dashboard\",\n            children: /*#__PURE__*/_jsxDEV(BotaoClicado, {\n              children: \"Voltar \\xE0 tela Inicial\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"botoes-cadastro\",\n          children: /*#__PURE__*/_jsxDEV(BotaoClicado, {\n            onClick: handleDeleteAccount,\n            \"aria-label\": \"Excluir conta\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faUserSlash\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 82\n            }, this), \"Excluir Conta\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 4\n  }, this);\n}\n_s(MeuCadastro, \"SwaxHJmHMSWzqC428SsspmRz3vI=\", false, function () {\n  return [useNavigate];\n});\n_c = MeuCadastro;\nvar _c;\n$RefreshReg$(_c, \"MeuCadastro\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","supabase","Titulo","Botao","BotaoClicado","CaixaTexto","Footer","FontAwesomeIcon","faUserSlash","jsxDEV","_jsxDEV","MeuCadastro","_s","nome","setNome","email","setEmail","senha","setSenha","confirmarSenha","setConfirmarSenha","erro","setErro","navigate","fetchUser","data","user","auth","getUser","error","from","select","eq","id","single","console","message","handleSubmit","e","preventDefault","updateError","update","passwordError","updateUser","password","err","handleDeleteAccount","confirmDelete","window","confirm","deleteError","api","deleteUser","children","className","text","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","value","type","onChange","target","required","readOnly","to","onClick","icon","_c","$RefreshReg$"],"sources":["C:/Users/rosic/OneDrive/Área de Trabalho/UNIVESP/gerenciadorTarefas/gerenciador-tarefas/src/Pages/MeuCadastro/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { supabase } from \"../../supabaseClient\";\r\nimport { Titulo, Botao, BotaoClicado, CaixaTexto } from \"../../Componentes/ComponentesIcones\";\r\nimport Footer from \"../../Componentes/Footer\"\r\nimport \"./meuCadastro.css\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faUserSlash } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nexport default function MeuCadastro() {\r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\"); // O email será apenas para leitura\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [confirmarSenha, setConfirmarSenha] = useState(\"\");\r\n  const [erro, setErro] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Usando useEffect para pegar as informações do usuário logado\r\n  useEffect(() => {\r\n    const fetchUser = async () => {\r\n      const { data: { user } } = await supabase.auth.getUser(); // Usando getUser() no lugar de user()\r\n\r\n      if (user) {\r\n        // Busca o nome do usuário na tabela 'usuarios' usando o iduser do supabase\r\n        const { data, error } = await supabase\r\n          .from(\"usuarios\")\r\n          .select(\"nome\")\r\n          .eq(\"iduser\", user.id) // Compara o id do usuário com o id da tabela\r\n          .single(); // Espera um único resultado\r\n\r\n        if (error) {\r\n          console.error(\"Erro ao buscar nome do usuário:\", error.message);\r\n          setErro(\"Erro ao carregar o nome do usuário.\");\r\n        } else {\r\n          setNome(data?.nome || \"Nome não disponível\");\r\n          setEmail(user.email); // O email do Supabase é carregado aqui\r\n        }\r\n      } else {\r\n        setErro(\"Usuário não autenticado.\");\r\n        navigate(\"/dashboard\"); // Redireciona para o login se o usuário não estiver autenticado\r\n      }\r\n    };\r\n\r\n    fetchUser();\r\n  }, [navigate]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErro(null);\r\n\r\n    // Verificando se as senhas coincidem\r\n    if (senha !== confirmarSenha) {\r\n      setErro(\"As senhas não coincidem.\");\r\n      return;\r\n    }\r\n\r\n    // Obtém o usuário logado\r\n    const { data: { user }, error } = await supabase.auth.getUser();\r\n\r\n    if (error || !user) {\r\n      setErro(\"Usuário não está logado.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Atualizando os dados do usuário na tabela 'usuarios', mas não atualizando o e-mail\r\n      const { error: updateError } = await supabase\r\n        .from(\"usuarios\")\r\n        .update({ nome }) // Atualiza o nome\r\n        .eq(\"iduser\", user.id); // Usando o ID do usuário para realizar a atualização\r\n\r\n      if (updateError) {\r\n        console.error(\"Erro ao atualizar no banco:\", updateError);\r\n        setErro(\"Erro ao atualizar informações no banco de dados.\");\r\n      } else {\r\n        // Atualizando a senha do usuário no Supabase\r\n        if (senha) {\r\n          const { error: passwordError } = await supabase.auth.updateUser({\r\n            password: senha, // Atualiza a senha do usuário no Supabase\r\n          });\r\n\r\n          if (passwordError) {\r\n            setErro(\"Erro ao atualizar a senha.\");\r\n            return;\r\n          }\r\n        }\r\n\r\n        // Após atualizar as informações, redireciona para a tela inicial\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erro inesperado:\", err);\r\n      setErro(\"Erro inesperado.\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteAccount = async () => {\r\n    const confirmDelete = window.confirm(\"Tem certeza que deseja excluir sua conta?\");\r\n    if (confirmDelete) {\r\n      const { data: { user }, error } = await supabase.auth.getUser();\r\n\r\n      if (error || !user) {\r\n        setErro(\"Erro ao buscar usuário.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const { error: deleteError } = await supabase.auth.api.deleteUser(user.id);\r\n\r\n        if (deleteError) {\r\n          setErro(\"Erro ao excluir a conta.\");\r\n        } else {\r\n          navigate(\"/\"); // Após excluir, redireciona para a tela de login\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Erro ao excluir a conta:\", err);\r\n        setErro(\"Erro inesperado ao excluir a conta.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n   <div>\r\n       <div className=\"cadastro-container\">\r\n      <Titulo text=\"Atualizar Conta\" />\r\n\r\n      <form onSubmit={handleSubmit} className=\"cadastro-form\">\r\n        {erro && <p className=\"erro\">{erro}</p>}\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nome\">Nome completo:</label>\r\n          <CaixaTexto\r\n            id=\"nome\"\r\n            text=\"Digite seu nome\"\r\n            value={nome}\r\n            type=\"text\"\r\n            onChange={(e) => setNome(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <small>O email não pode ser alterado</small>\r\n          <CaixaTexto\r\n            id=\"email\"\r\n            text=\"Seu email\"\r\n            value={email}\r\n            type=\"email\"\r\n            readOnly \r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <p>Trocar senha:</p>\r\n          <label htmlFor=\"senha\">Nova Senha:</label>\r\n          <CaixaTexto\r\n            id=\"senha\"\r\n            type=\"password\"\r\n            value={senha}\r\n            text=\"Digite sua nova senha\"\r\n            onChange={(e) => setSenha(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmarSenha\">Confirmar Nova Senha:</label>\r\n          <CaixaTexto\r\n            id=\"confirmarSenha\"\r\n            type=\"password\"\r\n            value={confirmarSenha}\r\n            text=\"Confirme sua nova senha\"\r\n            onChange={(e) => setConfirmarSenha(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"botoes-cadastro\">\r\n          <Botao text=\"Atualizar\" type=\"submit\" />\r\n          <Link to=\"/dashboard\">\r\n            <BotaoClicado>Voltar à tela Inicial</BotaoClicado>\r\n          </Link>\r\n          \r\n        </div>\r\n        <div className=\"botoes-cadastro\">\r\n          <BotaoClicado onClick={handleDeleteAccount} aria-label=\"Excluir conta\"><FontAwesomeIcon icon={faUserSlash} />Excluir Conta</BotaoClicado>\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <Footer/>\r\n   </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}