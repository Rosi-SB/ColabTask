{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rosic\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\UNIVESP\\\\gerenciadorTarefas\\\\gerenciador-tarefas\\\\src\\\\Pages\\\\Dashboard\\\\dashboardTarefas.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport FormularioTarefa from \"../../Componentes/Tarefas/formularioTarefa\";\nimport ListaTarefas from \"../../Componentes/Tarefas/listaTarefas\";\nimport \"./dashboard.css\";\nimport { Titulo, Botao } from \"../../Componentes/ComponentesIcones\";\nimport { supabase } from \"../../supabaseClient\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DashboardTarefas() {\n  _s();\n  const [tarefas, setTarefas] = useState([]);\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\n  const [tarefaEditando, setTarefaEditando] = useState(null);\n  const [usuarioId, setUsuarioId] = useState(null);\n  useEffect(() => {\n    carregarTarefas();\n  }, []);\n  const carregarTarefas = async () => {\n    const {\n      data,\n      error\n    } = await supabase.from(\"tarefas\").select(\"*\").order(\"descricao\");\n    if (error) {\n      console.error(\"Erro ao carregar tarefas:\", error);\n    } else {\n      setTarefas(data);\n    }\n  };\n  const salvarTarefa = async tarefa => {\n    if (!tarefa.descricao || tarefa.descricao.trim() === \"\") {\n      alert(\"A descrição da tarefa não pode estar vazia.\");\n      return;\n    }\n    let error;\n    if (tarefaEditando) {\n      ({\n        error\n      } = await supabase.from(\"tarefas\").update({\n        descricao: tarefa.descricao,\n        concluida: tarefa.concluida\n      }).eq(\"id\", tarefa.id));\n    } else {\n      ({\n        error\n      } = await supabase.from(\"tarefas\").insert([{\n        descricao: tarefa.descricao,\n        concluida: false\n      }]));\n    }\n    if (error) {\n      console.error(\"Erro ao salvar tarefa:\", error);\n    }\n    setTarefaEditando(null);\n    setMostrarFormulario(false);\n    carregarTarefas();\n  };\n  const alternarConclusao = async (id, concluidaAtual) => {\n    const {\n      error\n    } = await supabase.from(\"tarefas\").update({\n      concluida: !concluidaAtual\n    }).eq(\"id\", id);\n    if (error) console.error(\"Erro ao atualizar status:\", error);\n    carregarTarefas();\n  };\n  const excluirTarefa = async id => {\n    const {\n      error\n    } = await supabase.from(\"tarefas\").delete().eq(\"id\", id);\n    if (error) console.error(\"Erro ao excluir tarefa:\", error);\n    carregarTarefas();\n  };\n  const editarTarefa = tarefa => {\n    setTarefaEditando(tarefa);\n    setMostrarFormulario(true);\n  };\n  const progresso = tarefas.length ? tarefas.filter(t => t.concluida).length / tarefas.length * 100 : 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-tarefas\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cabecalho\",\n      children: [/*#__PURE__*/_jsxDEV(Titulo, {\n        text: \"Minhas Tarefas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Botao, {\n        text: \"+ Nova Tarefa\",\n        onClick: () => {\n          setTarefaEditando(null);\n          setMostrarFormulario(!mostrarFormulario);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"progresso\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Progresso do Projeto\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"progress\", {\n        value: progresso,\n        max: \"100\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), mostrarFormulario && /*#__PURE__*/_jsxDEV(FormularioTarefa, {\n      onSalvar: salvarTarefa,\n      tarefa: tarefaEditando\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ListaTarefas, {\n      tarefas: tarefas,\n      onExcluir: excluirTarefa,\n      onToggleConclusao: id => {\n        const tarefa = tarefas.find(t => t.id === id);\n        if (tarefa) alternarConclusao(id, tarefa.concluida);\n      },\n      onEditar: editarTarefa\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(DashboardTarefas, \"a9Qb/eKXDT6xhELdDEemcJ/JSnk=\");\n_c = DashboardTarefas;\nvar _c;\n$RefreshReg$(_c, \"DashboardTarefas\");","map":{"version":3,"names":["useState","useEffect","FormularioTarefa","ListaTarefas","Titulo","Botao","supabase","jsxDEV","_jsxDEV","DashboardTarefas","_s","tarefas","setTarefas","mostrarFormulario","setMostrarFormulario","tarefaEditando","setTarefaEditando","usuarioId","setUsuarioId","carregarTarefas","data","error","from","select","order","console","salvarTarefa","tarefa","descricao","trim","alert","update","concluida","eq","id","insert","alternarConclusao","concluidaAtual","excluirTarefa","delete","editarTarefa","progresso","length","filter","t","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","max","onSalvar","onExcluir","onToggleConclusao","find","onEditar","_c","$RefreshReg$"],"sources":["C:/Users/rosic/OneDrive/Área de Trabalho/UNIVESP/gerenciadorTarefas/gerenciador-tarefas/src/Pages/Dashboard/dashboardTarefas.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\r\nimport FormularioTarefa from \"../../Componentes/Tarefas/formularioTarefa\";\r\nimport ListaTarefas from \"../../Componentes/Tarefas/listaTarefas\";\r\nimport \"./dashboard.css\";\r\nimport { Titulo, Botao } from \"../../Componentes/ComponentesIcones\";\r\nimport { supabase } from \"../../supabaseClient\";\r\n\r\nexport default function DashboardTarefas() {\r\n  const [tarefas, setTarefas] = useState([]);\r\n  const [mostrarFormulario, setMostrarFormulario] = useState(false);\r\n  const [tarefaEditando, setTarefaEditando] = useState(null);\r\n    const [usuarioId, setUsuarioId] = useState(null);\r\n\r\n  useEffect(() => {\r\n    carregarTarefas();\r\n  }, []);\r\n\r\n  const carregarTarefas = async () => {\r\n    const { data, error } = await supabase\r\n      .from(\"tarefas\")\r\n      .select(\"*\")\r\n      .order(\"descricao\");\r\n\r\n    if (error) {\r\n      console.error(\"Erro ao carregar tarefas:\", error);\r\n    } else {\r\n      setTarefas(data);\r\n    }\r\n  };\r\n\r\n  const salvarTarefa = async (tarefa) => {\r\n    if (!tarefa.descricao || tarefa.descricao.trim() === \"\") {\r\n      alert(\"A descrição da tarefa não pode estar vazia.\");\r\n      return;\r\n    }\r\n\r\n    let error;\r\n    if (tarefaEditando) {\r\n      ({ error } = await supabase\r\n        .from(\"tarefas\")\r\n        .update({\r\n          descricao: tarefa.descricao,\r\n          concluida: tarefa.concluida,\r\n        })\r\n        .eq(\"id\", tarefa.id));\r\n    } else {\r\n      ({ error } = await supabase\r\n        .from(\"tarefas\")\r\n        .insert([{ descricao: tarefa.descricao, concluida: false }]));\r\n    }\r\n\r\n    if (error) {\r\n      console.error(\"Erro ao salvar tarefa:\", error);\r\n    }\r\n\r\n    setTarefaEditando(null);\r\n    setMostrarFormulario(false);\r\n    carregarTarefas();\r\n  };\r\n\r\n  const alternarConclusao = async (id, concluidaAtual) => {\r\n    const { error } = await supabase\r\n      .from(\"tarefas\")\r\n      .update({ concluida: !concluidaAtual })\r\n      .eq(\"id\", id);\r\n\r\n    if (error) console.error(\"Erro ao atualizar status:\", error);\r\n    carregarTarefas();\r\n  };\r\n\r\n  const excluirTarefa = async (id) => {\r\n    const { error } = await supabase.from(\"tarefas\").delete().eq(\"id\", id);\r\n    if (error) console.error(\"Erro ao excluir tarefa:\", error);\r\n    carregarTarefas();\r\n  };\r\n\r\n  const editarTarefa = (tarefa) => {\r\n    setTarefaEditando(tarefa);\r\n    setMostrarFormulario(true);\r\n  };\r\n\r\n  const progresso = tarefas.length\r\n    ? (tarefas.filter((t) => t.concluida).length / tarefas.length) * 100\r\n    : 0;\r\n\r\n  return (\r\n    <div className=\"dashboard-tarefas\">\r\n      <div className=\"cabecalho\">\r\n        <Titulo text=\"Minhas Tarefas\" />\r\n        <Botao\r\n          text=\"+ Nova Tarefa\"\r\n          onClick={() => {\r\n            setTarefaEditando(null);\r\n            setMostrarFormulario(!mostrarFormulario);\r\n          }}\r\n        />\r\n      </div>\r\n\r\n      <div className=\"progresso\">\r\n        <label>Progresso do Projeto</label>\r\n        <progress value={progresso} max=\"100\" />\r\n      </div>\r\n\r\n      {mostrarFormulario && (\r\n        <FormularioTarefa\r\n          onSalvar={salvarTarefa}\r\n          tarefa={tarefaEditando}\r\n        />\r\n      )}\r\n\r\n      <ListaTarefas\r\n        tarefas={tarefas}\r\n        onExcluir={excluirTarefa}\r\n        onToggleConclusao={(id) => {\r\n          const tarefa = tarefas.find((t) => t.id === id);\r\n          if (tarefa) alternarConclusao(id, tarefa.concluida);\r\n        }}\r\n        onEditar={editarTarefa}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}