{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rosic\\\\OneDrive\\\\\\xC1rea de Trabalho\\\\UNIVESP\\\\gerenciadorTarefas\\\\gerenciador-tarefas\\\\src\\\\Pages\\\\MeuCadastro\\\\index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { supabase } from \"../../supabaseClient\";\nimport { Titulo, Botao, BotaoClicado, CaixaTexto } from \"../../Componentes/ComponentesIcones\";\nimport \"./meuCadastro.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MeuCadastro() {\n  _s();\n  const [nome, setNome] = useState(\"\");\n  const [email, setEmail] = useState(\"\"); // O email será apenas para leitura\n  const [senha, setSenha] = useState(\"\");\n  const [confirmarSenha, setConfirmarSenha] = useState(\"\");\n  const [erro, setErro] = useState(null);\n  const navigate = useNavigate();\n\n  // Usando useEffect para pegar as informações do usuário logado\n  useEffect(() => {\n    const fetchUserData = async () => {\n      const {\n        data: {\n          user\n        },\n        error\n      } = await supabase.auth.getUser();\n      if (error) {\n        setErro(\"Erro ao carregar os dados do usuário.\");\n        return;\n      }\n      if (user) {\n        // Preenche os campos com as informações do usuário\n        setNome(user.user_metadata.nome || \"\"); // Nome do usuário vindo dos metadados\n        setEmail(user.email); // O email não será editável\n      } else {\n        navigate(\"/\"); // Se o usuário não estiver logado, redireciona para o login\n      }\n    };\n    fetchUserData();\n  }, [navigate]);\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setErro(null);\n\n    // Verificando se as senhas coincidem\n    if (senha !== confirmarSenha) {\n      setErro(\"As senhas não coincidem.\");\n      return;\n    }\n\n    // Obtém o usuário logado\n    const {\n      data: {\n        user\n      },\n      error\n    } = await supabase.auth.getUser();\n    if (error || !user) {\n      setErro(\"Usuário não está logado.\");\n      return;\n    }\n    try {\n      // Atualizando os dados do usuário na tabela 'usuarios', mas não atualizando o e-mail\n      const {\n        error: updateError\n      } = await supabase.from(\"usuarios\").update({\n        nome\n      }) // Atualiza o nome\n      .eq(\"iduser\", user.id); // Usando o ID do usuário para realizar a atualização\n\n      if (updateError) {\n        console.error(\"Erro ao atualizar no banco:\", updateError);\n        setErro(\"Erro ao atualizar informações no banco de dados.\");\n      } else {\n        // Atualizando a senha do usuário no Supabase\n        if (senha) {\n          const {\n            error: passwordError\n          } = await supabase.auth.updateUser({\n            password: senha // Atualiza a senha do usuário no Supabase\n          });\n          if (passwordError) {\n            setErro(\"Erro ao atualizar a senha.\");\n            return;\n          }\n        }\n\n        // Após atualizar as informações, redireciona para a tela inicial\n        navigate(\"/dashboard\");\n      }\n    } catch (err) {\n      console.error(\"Erro inesperado:\", err);\n      setErro(\"Erro inesperado.\");\n    }\n  };\n  const handleDeleteAccount = async () => {\n    const confirmDelete = window.confirm(\"Tem certeza que deseja excluir sua conta?\");\n    if (confirmDelete) {\n      const {\n        data: {\n          user\n        },\n        error\n      } = await supabase.auth.getUser();\n      if (error || !user) {\n        setErro(\"Erro ao buscar usuário.\");\n        return;\n      }\n      try {\n        const {\n          error: deleteError\n        } = await supabase.auth.api.deleteUser(user.id);\n        if (deleteError) {\n          setErro(\"Erro ao excluir a conta.\");\n        } else {\n          navigate(\"/\"); // Após excluir, redireciona para a tela de login\n        }\n      } catch (err) {\n        console.error(\"Erro ao excluir a conta:\", err);\n        setErro(\"Erro inesperado ao excluir a conta.\");\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cadastro-container\",\n    children: [/*#__PURE__*/_jsxDEV(Titulo, {\n      text: \"Atualizar Conta\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"cadastro-form\",\n      children: [erro && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"erro\",\n        children: erro\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"nome\",\n          children: \"Nome completo:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CaixaTexto, {\n          id: \"nome\",\n          text: \"Digite seu nome\",\n          value: nome,\n          type: \"text\",\n          onChange: e => setNome(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"email\",\n          children: \"Email:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"O email n\\xE3o pode ser alterado\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CaixaTexto, {\n          id: \"email\",\n          text: \"Seu email\",\n          value: email,\n          type: \"email\",\n          readOnly: true // O email não pode ser alterado\n          ,\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"senha\",\n          children: \"Nova Senha:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CaixaTexto, {\n          id: \"senha\",\n          type: \"password\",\n          value: senha,\n          text: \"Digite sua nova senha\",\n          onChange: e => setSenha(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-group\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"confirmarSenha\",\n          children: \"Confirmar Nova Senha:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CaixaTexto, {\n          id: \"confirmarSenha\",\n          type: \"password\",\n          value: confirmarSenha,\n          text: \"Confirme sua nova senha\",\n          onChange: e => setConfirmarSenha(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"botoes-cadastro\",\n        children: [/*#__PURE__*/_jsxDEV(Botao, {\n          text: \"Atualizar\",\n          type: \"submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/dashboard\",\n          children: /*#__PURE__*/_jsxDEV(BotaoClicado, {\n            children: \"Voltar \\xE0 tela Inicial\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"botoes-cadastro\",\n        children: /*#__PURE__*/_jsxDEV(BotaoClicado, {\n          onClick: handleDeleteAccount,\n          \"aria-label\": \"Excluir conta\",\n          children: \"Excluir Conta\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 5\n  }, this);\n}\n_s(MeuCadastro, \"SwaxHJmHMSWzqC428SsspmRz3vI=\", false, function () {\n  return [useNavigate];\n});\n_c = MeuCadastro;\nvar _c;\n$RefreshReg$(_c, \"MeuCadastro\");","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","supabase","Titulo","Botao","BotaoClicado","CaixaTexto","jsxDEV","_jsxDEV","MeuCadastro","_s","nome","setNome","email","setEmail","senha","setSenha","confirmarSenha","setConfirmarSenha","erro","setErro","navigate","fetchUserData","data","user","error","auth","getUser","user_metadata","handleSubmit","e","preventDefault","updateError","from","update","eq","id","console","passwordError","updateUser","password","err","handleDeleteAccount","confirmDelete","window","confirm","deleteError","api","deleteUser","className","children","text","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","value","type","onChange","target","required","readOnly","to","onClick","_c","$RefreshReg$"],"sources":["C:/Users/rosic/OneDrive/Área de Trabalho/UNIVESP/gerenciadorTarefas/gerenciador-tarefas/src/Pages/MeuCadastro/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useNavigate } from \"react-router-dom\";\r\nimport { supabase } from \"../../supabaseClient\";\r\nimport { Titulo, Botao, BotaoClicado, CaixaTexto } from \"../../Componentes/ComponentesIcones\";\r\nimport \"./meuCadastro.css\";\r\n\r\nexport default function MeuCadastro() {\r\n  const [nome, setNome] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\"); // O email será apenas para leitura\r\n  const [senha, setSenha] = useState(\"\");\r\n  const [confirmarSenha, setConfirmarSenha] = useState(\"\");\r\n  const [erro, setErro] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Usando useEffect para pegar as informações do usuário logado\r\n  useEffect(() => {\r\n    const fetchUserData = async () => {\r\n      const { data: { user }, error } = await supabase.auth.getUser();\r\n      \r\n      if (error) {\r\n        setErro(\"Erro ao carregar os dados do usuário.\");\r\n        return;\r\n      }\r\n\r\n      if (user) {\r\n        // Preenche os campos com as informações do usuário\r\n        setNome(user.user_metadata.nome || \"\"); // Nome do usuário vindo dos metadados\r\n        setEmail(user.email); // O email não será editável\r\n      } else {\r\n        navigate(\"/\"); // Se o usuário não estiver logado, redireciona para o login\r\n      }\r\n    };\r\n\r\n    fetchUserData();\r\n  }, [navigate]);\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setErro(null);\r\n\r\n    // Verificando se as senhas coincidem\r\n    if (senha !== confirmarSenha) {\r\n      setErro(\"As senhas não coincidem.\");\r\n      return;\r\n    }\r\n\r\n    // Obtém o usuário logado\r\n    const { data: { user }, error } = await supabase.auth.getUser();\r\n\r\n    if (error || !user) {\r\n      setErro(\"Usuário não está logado.\");\r\n      return;\r\n    }\r\n\r\n    try {\r\n      // Atualizando os dados do usuário na tabela 'usuarios', mas não atualizando o e-mail\r\n      const { error: updateError } = await supabase\r\n        .from(\"usuarios\")\r\n        .update({ nome }) // Atualiza o nome\r\n        .eq(\"iduser\", user.id); // Usando o ID do usuário para realizar a atualização\r\n\r\n      if (updateError) {\r\n        console.error(\"Erro ao atualizar no banco:\", updateError);\r\n        setErro(\"Erro ao atualizar informações no banco de dados.\");\r\n      } else {\r\n        // Atualizando a senha do usuário no Supabase\r\n        if (senha) {\r\n          const { error: passwordError } = await supabase.auth.updateUser({\r\n            password: senha, // Atualiza a senha do usuário no Supabase\r\n          });\r\n\r\n          if (passwordError) {\r\n            setErro(\"Erro ao atualizar a senha.\");\r\n            return;\r\n          }\r\n        }\r\n\r\n        // Após atualizar as informações, redireciona para a tela inicial\r\n        navigate(\"/dashboard\");\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Erro inesperado:\", err);\r\n      setErro(\"Erro inesperado.\");\r\n    }\r\n  };\r\n\r\n  const handleDeleteAccount = async () => {\r\n    const confirmDelete = window.confirm(\"Tem certeza que deseja excluir sua conta?\");\r\n    if (confirmDelete) {\r\n      const { data: { user }, error } = await supabase.auth.getUser();\r\n\r\n      if (error || !user) {\r\n        setErro(\"Erro ao buscar usuário.\");\r\n        return;\r\n      }\r\n\r\n      try {\r\n        const { error: deleteError } = await supabase.auth.api.deleteUser(user.id);\r\n\r\n        if (deleteError) {\r\n          setErro(\"Erro ao excluir a conta.\");\r\n        } else {\r\n          navigate(\"/\"); // Após excluir, redireciona para a tela de login\r\n        }\r\n      } catch (err) {\r\n        console.error(\"Erro ao excluir a conta:\", err);\r\n        setErro(\"Erro inesperado ao excluir a conta.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cadastro-container\">\r\n      <Titulo text=\"Atualizar Conta\" />\r\n\r\n      <form onSubmit={handleSubmit} className=\"cadastro-form\">\r\n        {erro && <p className=\"erro\">{erro}</p>}\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"nome\">Nome completo:</label>\r\n          <CaixaTexto\r\n            id=\"nome\"\r\n            text=\"Digite seu nome\"\r\n            value={nome}\r\n            type=\"text\"\r\n            onChange={(e) => setNome(e.target.value)}\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Email:</label>\r\n          <p>O email não pode ser alterado</p>\r\n          <CaixaTexto\r\n            id=\"email\"\r\n            text=\"Seu email\"\r\n            value={email}\r\n            type=\"email\"\r\n            readOnly  // O email não pode ser alterado\r\n            required\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"senha\">Nova Senha:</label>\r\n          <CaixaTexto\r\n            id=\"senha\"\r\n            type=\"password\"\r\n            value={senha}\r\n            text=\"Digite sua nova senha\"\r\n            onChange={(e) => setSenha(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"confirmarSenha\">Confirmar Nova Senha:</label>\r\n          <CaixaTexto\r\n            id=\"confirmarSenha\"\r\n            type=\"password\"\r\n            value={confirmarSenha}\r\n            text=\"Confirme sua nova senha\"\r\n            onChange={(e) => setConfirmarSenha(e.target.value)}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"botoes-cadastro\">\r\n          <Botao text=\"Atualizar\" type=\"submit\" />\r\n          <Link to=\"/dashboard\">\r\n            <BotaoClicado>Voltar à tela Inicial</BotaoClicado>\r\n          </Link>\r\n        </div>\r\n        <div className=\"botoes-cadastro\">\r\n          <BotaoClicado onClick={handleDeleteAccount} aria-label=\"Excluir conta\">Excluir Conta</BotaoClicado>\r\n          </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}